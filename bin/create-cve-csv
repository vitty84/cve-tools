#!/usr/bin/env node
/**
 * @fileOverview Build a CSV from a text file containing one or more CVE IDs.
 *
 * Usage:
 *
 * create-csv-cve -f path/to/file
 * create-csv-cve "data with CVE IDs in it"
 * cat path/to/file | create-csv-cve
 */

// Core.
var path = require('path');
var util = require('util');

// NPM.
var _ = require('lodash');

// Local.
var index = require('../index');

var isFile = false;
var data = '';

/**
 * Handle the callback and results.
 */
exports.handleResults = function (error, results) {
  if (error) {
    console.error(error);
    process.exit(1);
  }

  console.info(index.dataToCsvString(results));
};

/**
 * Run the rest of the process.
 */
exports.run = function (inputData, inputDataIsFilePath) {
  if (inputDataIsFilePath) {
    index.dataFromFile(inputData, exports.handleResults);
  }
  else {
    index.dataFromString(inputData, exports.handleResults);
  }
}

/**
 * Exit, printing a usage message.
 * @return {[type]} [description]
 */
exports.usage = function () {
  console.info([
    'Usage:',
    '  create-csv-cve -f path/to/file',
    '  create-csv-cve "data with CVE IDs in it"',
    '  cat path/to/file | create-csv-cve'
  ].join('\n'));
}

// Called with arguments. E.g.:
// create-csv-cve -f path/to/file
// create-csv-cve "data with CVE IDs in it"
if (process.stdin.isTTY) {
  if (['-h', '--help'].indexOf(process.argv[2]) !== -1) {
    exports.usage();
    process.exit(0);
  }
  else if (['-f', '--file'].indexOf(process.argv[2]) !== -1) {
    isFile = true;
    data = process.argv[3];
  }
  else {
    data = process.argv[2];
  }

  if (!data) {
    exports.usage();
    process.exit(1);
  }
  else {
    exports.run(data, isFile);
  }
}
// Accepting piped content. E.g.:
// cat path/to/file | create-cve-csv > cve.csv
else {
  process.stdin.setEncoding('utf8');

  process.stdin.on('readable', function() {
    var chunk;
    while (chunk = process.stdin.read()) {
      data += chunk;
    }
  });

  process.stdin.on('end', function () {
    exports.run(data, isFile);
  });
}
