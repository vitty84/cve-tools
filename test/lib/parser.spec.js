/**
 * @fileOverview Tests for lib/parser.
 */

// Core.
var path = require('path');

// NPM.
var fs = require('fs-extra');

// Local.
var parser = require('../../lib/parser');

describe('lib/parser', function () {
  var cveIds;
  var cveStr;
  var sandbox;

  beforeEach(function () {
    sandbox = sinon.sandbox.create();

    cveStr = [
      'CVE Lorem ipsum dolor sit amet, consectetur CVE-2002-1432',
      'adipiscing elit, sed do eiusmod tempor CVE-- incididunt ut labore',
      'et dolore magna, CVE-2002-1432 aliqua. Ut enim ad minim veniam,',
      'exercitationCVE-2002-1732 ullamco laboris nisi ut aliquip ex ea commodo',
      'consequat. Duis (CVE-2002-1434) in reprehenderit in voluptate',
      'velit cve-2014-0023 dolore eu fugiat nulla pariatur. Excepteur sint',
      'occaecat cupidatat CVE-2002-1733non proident, sunt in culpa qui officia',
      'deserunt cve-sad-thing mollit anim id est laborum.'
    ].join('\n');

    cveIds = [
      'CVE-2002-1432',
      'CVE-2002-1434',
      'CVE-2014-0023'
    ].sort();
  });

  afterEach(function () {
    sandbox.restore();
  });

  describe('fromString', function () {
    it('functions as expected', function () {
      expect(parser.fromString(cveStr)).to.eql(cveIds);
    });

    it('returns empty array for non-string', function () {
      expect(parser.fromString(null)).to.eql([]);
    });
  });

  describe('fromFile', function () {
    var relativePath;
    var absolutePath;
    var encoding;

    beforeEach(function () {
      relativePath = 'test/scratch/cves.txt';
      absolutePath = path.resolve(__dirname, '../..', relativePath);
      encoding = 'utf-8';

      fs.mkdirsSync(path.dirname(absolutePath));
      fs.writeFileSync(absolutePath, cveStr, { encoding: encoding });
    });

    afterEach(function () {
      fs.unlinkSync(absolutePath);
    });

    it('functions as expected for relativePath', function () {
      expect(parser.fromFile(relativePath)).to.eql(cveIds);
    });

    it('functions as expected for absolutePath', function () {
      expect(parser.fromFile(absolutePath)).to.eql(cveIds);
    });

  });

});
